@page "/bars"
@inject HttpClient Http

@if (bars == null)
{
    <p>
        <em>No bars anymore - we drank to much &#x1F62B; WT&#x1F378;?!</em>
    </p>
}
else
{
    <div class="container mx-auto flex flex-wrap items-center justify-center pt-6">
        @foreach (var bar in bars)
        {
            <div class="w-full sm:w-1/2 md:w-1/3 lg:w-1/3 xl:w-1/4 px-4 mb-4 rounded overflow-hidden shadow-lg">
                <div class="container mx-auto flex items-center justify-center">
                    <img class="object-center" src="/images/icon.png" alt="Bar '@bar.Name' image">
                </div>
                <div class="px-6 py-4">
                    <div class="font-bold text-xl mb-2">@bar.Name</div>
                    <p class="text-gray-700 text-base">
                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptatibus quia, nulla! Maiores et perferendis eaque, exercitationem praesentium nihil.
                    </p>
                </div>
                <div class="px-6 py-4">
                    <span class="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2">#photography</span>
                    <span class="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2">#travel</span>
                    <span class="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700">#winter</span>
                </div>
            </div>
        }
    </div>
}

@code {
    private Bar[]? bars;

    protected override async Task OnInitializedAsync()
    {
        bars = await Http.GetFromJsonAsync<Bar[]>("sample-data/bars.json");
    }

    public class Bar
    {
        public string Name { get; set; } = "";
    }

}